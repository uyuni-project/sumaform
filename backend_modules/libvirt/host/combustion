#!/bin/bash
# combustion: network prepare
set -euxo pipefail

# -------------------
# FUNCTIONS
# -------------------

nm_config() {
  local num="$1"
  local iface="$2"
  local method="$3"

  local dir="/etc/NetworkManager/system-connections"
  local file="$dir/Wired connection $num.nmconnection"

  mkdir -p "$dir"
  cat > "$file" <<EOF
[connection]
id=Wired connection $num
type=ethernet
interface-name=$iface

[ipv4]
method=$method

[ipv6]
addr-gen-mode=eui64
method=auto
EOF
  chmod go-r "$file"
}

# -------------------
# PREPARE PHASE
# -------------------

if [ "$${1-}" = "--prepare" ]; then
  nm_config 1 eth0 auto
  nm_config 2 eth1 manual
  exit 0
fi

# -------------------
# POST-INSTALL SETUP
# -------------------

exec > >(tee -a /var/log/combustion) 2>&1

# Network config (on real FS)
nm_config 1 eth0 auto
nm_config 2 eth1 manual

# Root password
echo 'root:$6$3aQC9rrDLHiTf1yR$NoKe9tko0kFIpu0rQ2y/OzOOtbVvs0Amr2bx0T4cGf6aq8PG74EmVy8lSDJdbLVVFpOSzwELWyReRCiPHa7DG0' | chpasswd -e

# SSH config for specific images
%{ if image == "slmicro60o" || image == "slmicro61o" }
cat > /etc/ssh/sshd_config.d/root.conf <<EOF
PermitRootLogin yes
ChallengeResponseAuthentication yes
EOF
%{ endif }

systemctl enable sshd.service

# -------------------
# REPOSITORY SETUP
# -------------------

# General GPG and base repo
${ gpg_keys }
zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/SUSE:/CA/15.6/ ca_suse

# Image-specific repository logic
%{ if image == "leapmicro55o" }
  zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/systemsmanagement:/Uyuni:/Master:/openSUSE_Leap_15-Uyuni-Client-Tools/openSUSE_Leap_15.0/ client_tools_repo

  %{ if container_server || container_proxy }
    %{ if product_version == "uyuni-master" || product_version == "uyuni-pr" }
      zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/systemsmanagement:/Uyuni:/Master:/ContainerUtils/openSUSE_Leap_Micro_5.5/ container_utils_repo
    %{ else }
      zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/systemsmanagement:/Uyuni:/Stable:/ContainerUtils/openSUSE_Leap_Micro_5.5/ container_utils_repo
    %{ endif }
  %{ endif }

  %{ if container_runtime == "k3s" }
    zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/update/leap/15.6/sle/ sle_update_repo
  %{ endif }

%{ elif image == "slmicro60o" }
  zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/SUSE/Products/SL-Micro/6.0/x86_64/product/ os_pool_repo

  %{ if product_version in ["uyuni-master", "uyuni-released", "uyuni-pr"] }
    zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org"}/repositories/systemsmanagement:/Uyuni:/Master:/SLMicro6-Uyuni-Client-Tools/SL-Micro6/ client_tools_repo
  %{ else }
    zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/SUSE/Products/SUSE-Manager-Tools-For-SL-Micro/6/x86_64/product/ tools_pool_repo
  %{ endif }

%{ elif image == "slmicro61o" }
  zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/SUSE/Products/SL-Micro/6.1/x86_64/product/ os_pool_repo

  %{ if product_version in ["uyuni-master", "uyuni-released", "uyuni-pr"] }
    zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org"}/repositories/systemsmanagement:/Uyuni:/Master:/SLMicro6-Uyuni-Client-Tools/SL-Micro6/ client_tools_repo
  %{ else }
    zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/SUSE/Products/SUSE-Manager-Tools-For-SL-Micro/6/x86_64/product/ tools_pool_repo
  %{ endif }

  %{ if container_server || container_proxy }
    %{ if product_version == "uyuni-master" || product_version == "uyuni-pr" }
      zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/systemsmanagement:/Uyuni:/Master:/ContainerUtils/openSUSE_Leap_16.0/ container_utils_repo
    %{ else }
      %{ if product_version in ["5.1-released", "5.1-nightly"] }
        %{ if container_server }
          zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com"}/ibs/SUSE:/SLFO:/Products:/Multi-Linux-Manager:/5.1:/ToTest/product/repo/Multi-Linux-Manager-Server-5.1-x86_64/ container_utils_repo
        %{ endif }
        %{ if container_proxy }
          zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com"}/ibs/SUSE:/SLFO:/Products:/Multi-Linux-Manager:/5.1:/ToTest/product/repo/Multi-Linux-Manager-Proxy-5.1-x86_64/ container_utils_repo
        %{ endif }
      %{ else }
        %{ if container_server }
          zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/Devel:/Galaxy:/Manager:/Head/images/repo/Multi-Linux-Manager-Server-5.1-x86_64/ container_utils_repo
        %{ endif }
        %{ if container_proxy }
          zypper ar http://${ use_mirror_images ? mirror : "dist.nue.suse.com/ibs"}/Devel:/Galaxy:/Manager:/Head/images/repo/Multi-Linux-Manager-Proxy-5.1-x86_64/ container_utils_repo
        %{ endif }
      %{ endif }
    %{ endif }
  %{ endif }
%{ endif }

# -------------------
# ADDITIONAL REPOS
# -------------------

for i in ${additional_repos}; do
  name=$(echo $i | cut -d= -f1)
  url=$(echo $i | cut -d= -f2)
  %{ if product_version == "uyuni-pr" }
    zypper ar --no-gpgcheck "$url" "$name"
  %{ else }
    zypper ar "$url" "$name"
  %{ endif }
done

# -------------------
# PACKAGE INSTALLATION
# -------------------

PACKAGES="qemu-guest-agent avahi ca-certificates"

%{ if container_runtime == "podman" }
  PACKAGES+=" podman netavark aardvark-dns"
%{ endif }

%{ if container_runtime == "k3s" }
  PACKAGES+=" helm"
%{ endif }

%{ if container_server || container_proxy }
  PACKAGES+=" bash-completion ca-certificates-suse"
%{ endif }

%{ if container_server }
  PACKAGES+=" mgradm mgrctl mgradm-bash-completion mgrctl-bash-completion"
%{ endif }

%{ if container_proxy }
  PACKAGES+=" mgrpxy"
%{ endif }

%{ if install_salt_bundle }
  PACKAGES+=" venv-salt-minion"
%{ else }
  PACKAGES+=" salt-minion"
%{ endif }

zypper --non-interactive install $PACKAGES

# -------------------
# TEST SUITE SETUP
# -------------------

%{ if testsuite }

  zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/repositories/systemsmanagement:/Uyuni:/Test-Packages:/Pool/rpm/ test_repo_rpm_pool

  %{ if image == "leapmicro55o" }
    zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/distribution/leap/15.6/repo/oss/ leap_pool_repo
    zypper ar http://${ use_mirror_images ? mirror : "download.opensuse.org" }/update/leap/15.6/oss/ leap_update_repo
  %{ elif image == "slmicro61o" }
    zypper ar --no-gpgcheck http://${ use_mirror_images ? mirror : "download.opensuse.org" }/distribution/leap/16.0/repo/oss/ leap_pool_repo
  %{ endif }

  TEST_PACKAGES="andromeda-dummy milkyway-dummy virgo-dummy timezone wget aaa_base-extras"

  %{ if container_server || container_proxy }
    TEST_PACKAGES+=" expect bind-utils"
  %{ endif }

  zypper --non-interactive install $TEST_PACKAGES
  # full update cause a timeout on deployment
  zypper --non-interactive update --no-recommends iptables

# WORKAROUND
# Installing the last version of suse-build-key harcoded until it is solved
%{ if image == "slmicro61o" }
  zypper --non-interactive install --from os_pool_repo suse-build-key=12.0-slfo.1.1_3.1
%{ endif }

%{ endif }

# -------------------
# CLEANUP
# -------------------

echo "Disabling automatic daily system updates"
ln -sf /dev/null /etc/systemd/system/transactional-update.timer

# Leave a marker
echo "Configured with combustion" > /etc/issue.d/combustion
